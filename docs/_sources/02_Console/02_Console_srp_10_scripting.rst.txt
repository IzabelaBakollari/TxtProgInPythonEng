Програми са познатим улазним подацима
=====================================

Скрипте
-------

Људи често у Пајтону пишу кратке програме које сами користе да би нешто израчунли или аутоматизовали. Такви програми су познати и под именом **скрипте.** За скрипте није необично да поједини или сви улазни подаци буду садржани у самој скрипти уместо да се учитавају. На пример, следећа скрипта рачуна цену са попустом од 20 одсто:
 
.. activecode:: console__scripting_fixed_srp

    popust = 20
    redovna_cena = 250
    snizena_cena = redovna_cena * (1 - popust / 100)
    print(redovna_cena, snizena_cena)

Упутство за коришћење ове скрипте би могло да буде: “У прве две линије скрипте поставите вредности које желите и затим покрените скрипту“.

Слично упутство нећете видети за програме које инсталирате на свој рачунар или мобилни телефон. Такве програме зовемо **апликације**, и они су писани тако да корисници не морају да знају (а најчешће и не могу да знају) како изгледају наредбе тог програма.

Код скрипти нема тако стриктне поделе на кориснике и програмере као код апликација. Скрипте се често пишу за сопствену употребу или за корисника који и сам програмира или разуме програмирање. Сви програми у овом приручнику су заправо више скрипте него апликације.

Већ смо нагласили да овај приручник није намењен само будућим професионалцима у програмирању. И ако не будете програмирали апликације, и даље можете имати користи од програмирања. Можда ћете написати неку скрипту или прилагодити неку постојећу, као што је то требало учинити у замишљеном упутству за скрипту из претходног примера.

Мењање улазних података уносом
------------------------------

Уопштимо претходни пример. Претпоставимо да у једној продавници имамо право на попуст од 20 одсто у односу на истакнуте цене. Интересују нас снижене цене разних производа, чије редовне цене знамо.

Решење које већ умемо да напишемо је да програм учита редовну цену производа а затим израчуна и испише снижену цену. Тај програм може да изгледа овако:

.. activecode:: console__scripting_input_srp

    popust = 20
    redovna_cena = int(input())
    snizena_cena = redovna_cena * (1 - popust / 100)
    print(redovna_cena, snizena_cena)

Програм можемо да покренемо више пута, задајући сваки пут редовну цену по једног од производа који нас интересују.

Варирање улазних података
-------------------------

У претходном примеру било је потребно покретати програм више пута и сваки пут уностити податак - редовну цену неког производа. У случају да су нам унапред познати сви подаци које бисмо уносили један по један при различитим покретањима програма, онда је удобније да све те податке унесемо директно у програм и да за сваки од података поновимо рачунање и исписивање резултата.

Рецимо да су редовне цене производа који нас интересују 250, 120 и 310 и желимо да помоћу програма у једном извршавању израчунамо цене са попустом за те производе. То можемо да урадимо овако:

.. activecode:: console__scripting_for_srp

    popust = 20
    for redovna_cena in (250, 120, 310):
        snizena_cena = redovna_cena * (1 - popust / 100)
        print(redovna_cena, snizena_cena)

Напомена: Запис облика (250, 120, 310) се у математици зове уређена *n*-торка (уређена енторка), али у програмирању је одомаћено краће име - **торка**.

Покретањем програма видимо да он исписује:

.. code::

    250 200.0
    120 96.0
    310 248.0

Примећујемо да су се последње две линије програма извршиле три пута, при чему је променљива *редовна_цена* добијала редом вредности 250, 120, 310. То смо постигли наредбом ``for``. Делови програма који се понављају се називају петљама, па можемо рећи да смо у претходном примеру употребили **for петљу**. 



На следећој слици су означени главни елементи *for* петље: 

.. image:: ../../_images/Console/console_loop_tuple_srp.png
  :width: 400px
  :align: center

- Црвеном бојом су написани обавезни елементи (речи ``for``, ``in`` и знак двотачка ``:`` у првом реду). Ови елементи се у свакој *for* наредби пишу на исти начин. 
- Плавом бојом је написана **променљива петље**. На том месту пишемо име променљиве која ће узимати редом наведене вредности. У нашем примеру променљива петље је *redovna_cena*.
- Зеленом бојом је написана торка вредности. На том месту у заградама пишемо вредности раздвојене зарезима. То су вредности које ће редом узимати променљива петље. У нашем примеру торка вредности је (250, 120, 310).
- Црном бојом је написано **тело петље**. То су наредбе које се по једанпут извршавају за сваку вредност променљиве петље. У наредбама тела петље може, а не мора да се користи променљива петље.

Наредбе тела петље се пишу увучено у односу на први ред наредбе *for* и све се увлаче за исти број размака. Уобичајено је да се користи 4 размака за увлачење и ми ћемо се држати те препоруке.



Примери и задаци
''''''''''''''''

.. questionnote::
    
    **Пример - када поћи**
    
    Драгољуб треба да стигне на одредиште најкасније у 17:00. Зависно од начина путовања који одабере, Драгољубу може да буде потребно 55, 70, 85, или 95 минута. Напишите програм који за сваки начин путовања исписује када најкасније Драгољуб треба да пође да би на време стигао на одредиште.
    
Програм који решава овај задатак, могао би да изгледа овако:

.. activecode:: console__scripting_start_travel_srp
    
    stizanje = 17*60
    for trajanje in (55, 70, 85, 95):
        polazak = stizanje - trajanje
        polazak_sati = polazak // 60
        polazak_minuta = polazak % 60
        print("Ако пут траје", trajanje, "минута, треба кренути у", polazak_sati, "сати и", polazak_minuta, "минута.")




.. questionnote::

    **Задатак - трајање пута**

    Ђорђе намерава да у 9 сати ујутро крене аутом на пут од 600 километара и интересује га када би стигао на одредиште ако би возио средњом брзином од 90, 100, 120 или 130 километара на сат. Допуните програм који исписује време стизања на одредиште за сваку од поменутих средњих брзина.
  
.. activecode:: console__scripting_speed_srp

    duzina_puta = 600 # Km
    polazak = 9       # h
    for a in ():  # ispravite i dopunite
        trajanje_puta = duzina_puta / brzina # h
        dolazak = polazak + trajanje_puta    # h
        dolazak_sati = int(dolazak)
        dolazak_minuta = round((dolazak - dolazak_sati) * 60)
        print("При брзини", brzina, "долазак је у", dolazak_sati, "сати и", dolazak_minuta, "минута")
        
.. commented out

    duzina_puta = 600
    polazak = 9
    for brzina in (90, 100, 120, 130):
        trajanje_puta = duzina_puta / brzina
        dolazak = polazak + trajanje_puta
        dolazak_sati = int(dolazak)
        dolazak_minuta = round((dolazak - dolazak_sati) * 60)
        print("При брзини", brzina, "долазак је у", dolazak_sati, "сати и", dolazak_minuta, "минута")




.. questionnote::

    **Задатак - завршна оцена**

    Збир досадашњих 5 Пертрових оцена је 23. Петар очекује још једну оцену са завршног контролног задатка. Допуните програм који за сваку могућу завршну оцену (1, 2, 3, 4, или 5) исписује колика би била средња оцена у том случају.
    
  
.. activecode:: console__scripting_final_mark_srp

    zbir_ocena_do_sad = 23
    broj_ocena_do_sad = 5
    for # dopunite
        srednja_ocena = 0 # ispravite
        print("Са завршном оценом", zavrsna_ocena, "средња оцена би била", srednja_ocena)



.. questionnote::

    **Задатак - џепарац**

    Марина прави план трошења џепарца током летовања од 14 дана. Напишите програм који за просечне дневне потрошње од 5, 10 или 20 евра исписује колико би у сваком од тих случајева Марини укупно требало новца.
    

.. activecode:: console__scripting_allowance_srp

    broj_dana = 14
    # довршите

