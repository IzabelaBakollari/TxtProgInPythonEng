Приказивање готових слика
-------------------------

Цртање основних облика може да буде забавно, а понекад је и изазовно. Ипак, било би још забавније да можемо да комбинујемо своје цртање са готовим сликама или фотографијама. У PyGame окружењу то се ради веома једноставно. Погледајмо следећи пример:

.. activecode:: PyGame__images_trees_and_apples1_srp
   :nocodelens:
   :enablecopy:
   :modaloutput:
   :includesrc: src\PyGame\1_Drawing\9_UsingImages\trees_and_apples1_srp.py

У овом програму нове су нам две функције библиотеке PyGame:

- Функција :code:`pg.image.load` учитава слику са диска. Овој функцији прослеђујемо име фајла који садржи слику (може се укључити и путања до фајла), а она као резултат враћа слику у облику погодном за програм. Тај резултат треба да сачувамо у некој променљивој (у примеру је то променљива *drvo_slika*);
- Функција :code:`prozor.blit` приказује слику у датом прозору. Овој функцији прослеђујемо променљиву која садржи слику (резултат функције *pg.image.load*) и позицију :math:`(x, y)` у прозору на којој желимо да се слика прикаже. На позицији коју смо задали ће се појавити горњи леви угао слике. У примеру смо задали позицију :math:`(0, 0)`, па се горњи леви угао слике појављује у горњем левом углу прозора.

Испробајте уписивање разних вредности координата уместо :math:`(0, 0)` да бисте боље разумели како функционише функција *blit*. Можемо да приметимо да је ово исцртавање врло слично цртању цртежа из више делова помоћу сидра.

Можете да испробате и приказивање једне слике на више места на екрану, као што смо то радили са основним облицима. Довољно је да позовете функцију *blit* више пута, са различитим вредностима за место приказивања.

Код приказивања слике на више места може доћи до преклапања слика. Зато треба водити рачуна о редоследу приказивања. У нашем случају, прво треба приказати дрво које замишљамо као даље, а затим оно које замишљамо као ближе. У противном коначна сцена може изгледати нелогично, као што показује следећа слика.

.. image:: ../../_images/PyGame/trees_and_apples_bad.png
   :width: 600px
   :align: center 
      
Објекти које доживљавамо као даље су обично у горњем делу слике, што значи да имају мању :math:`y` координату, мада ово не мора увек да буде тачно. У овом и у сличним примерима ће бити довољно да се држимо овог једноставног правила: **боље је прво приказивати објекте са мањом** :math:`y` **координатом**.

Дрвеће
''''''

У следећем програму поправите редослед позиција дрвећа у листи, тако да редослед исцртавања буде исправан, а затим додајте у петљи наредбу за цртање дрвета на позицији (*x*, *y*).

.. activecode:: PyGame__images_trees3_srp
    :nocodelens:
    :enablecopy:
    :modaloutput:
    :playtask:
    :includexsrc: src\PyGame\1_Drawing\9_UsingImages\trees_and_apples3_srp.py
    
    drvo_slika = pg.image.load("tree.png")  # slika drveta
    drvece_poz = [(240, 290), (400, 200), (550, 170), (120, 150), (200, 70)]
    
    prozor.fill(pg.Color("darkgreen")) # bojimo pozadinu ekrana u tamno zeleno
    for x, y in drvece_poz:
        pass # dovrsite


Јабуке
''''''

Довршите започети програм тако да црта дрво са јабукама (као у примеру).

.. activecode:: PyGame__images_trees2_srp
    :nocodelens:
    :enablecopy:
    :modaloutput:
    :playtask:
    :includexsrc: src\PyGame\1_Drawing\9_UsingImages\trees_and_apples2_srp.py
    
    drvo_slika = pg.image.load("tree.png")  # slika drveta
    jabuka_slika = pg.image.load("apple_small.png")  # slika jabuke
    jabuke_poz = ((43,191), (61, 158), (124, 145), (134, 175), (160, 180))
    
    # довршите: обојте позадину у тамно зелено, нацртајте дрво и на њему јабуке
    

Покушајте да измените програм тако да приказује дрво са јабукама померено 100 пиксела десно и 50 пиксела ниже.

Шах-мат
'''''''

Напишите програм који црта шаховску позицију, као у примеру. Називи фајлова са сликама празне табле, белог краља, белог топа и црног краља су редом "chess_table.png", "white_king.png", "white_rook.png", "black_king.png".

.. activecode:: PyGame__images_chess_mate_srp
    :nocodelens:
    :enablecopy:
    :modaloutput:
    :playtask:
    :includexsrc: src\PyGame\1_Drawing\9_UsingImages\chess_mate_srp.py
    


Воћњак
''''''

У следећем задатку је започето цртање воћњака. Ако покренемо програм (дугме "Покрени програм"), приметићемо неке недоследности. Један проблем је то што се јабуке налазе само на првом дрвету, а треба да се налазе на сваком дрвету, распоређене на исти начин. Осим тога, друго дрво слева (исправно) преклапа крајње лево дрво, али не преклапа његове јабуке. Потребно је да дрво које приказујемо раније, прикажемо заједно са његовим јабукама пре него што пређемо на следеће дрво.

Исправите програм, тако да приказује слику која се добија кликом на дугме "Прикажи пример".

.. activecode:: PyGame__images_trees_and_apples4_srp_srp
    :nocodelens:
    :enablecopy:
    :modaloutput:
    :playtask:
    :includexsrc: src\PyGame\1_Drawing\9_UsingImages\trees_and_apples4_srp.py
   
    drvo_slika = pg.image.load("tree.png")  # slika drveta
    jabuka_slika = pg.image.load("apple_small.png")  # slika jabuke
    jabuke_poz = ((43,191), (61, 158), (124, 145), (134, 175), (160, 180))
    
    prozor.fill(pg.Color("darkgreen")) # bojimo pozadinu ekrana u tamno zeleno
    for drvo_x, drvo_y in ((0, 0), (200, 70), (120, 150), (240, 290), (550, 170), (400, 200)):
        prozor.blit(drvo_slika, (drvo_x, drvo_y))
        
    for jabuka_x, jabuka_y in jabuke_poz:
        prozor.blit(jabuka_slika, (jabuka_x, jabuka_y))


