Библиотека PyGame
=================

Претпостављамо да сте већ упознали Пајтон као језик и да знате шта су изрази (константе, променљиве, оператори), наредбе (``if``, ``if-else``, ``if-elif-else``, ``for``), функције (оне уграђене попут ``min`` или ``abs`` и оне које сами дефинишете помоћу ``def``), стрингови (``"Zdravo"`` тј. ``'Zdravo'``), листе (попут ``[1, 2, 3]``), торке (попут ``(3, 4)``) и слично. 

Писање програма на Пајтону ћемо сада наставити да вежбамо користећи графичку библиотеку PyGame. Одабрали смо ову библиотеку јер она нуди могућност да се уз релативно мало програмирања дође до занимљивих резултата, који укључују цртање, анимацију и интеракцију програма са корсником. Према томе, циљ нашег бављења библиотеком PyGame је да наставите да увежбавате своју вештину програмирања на забаван начин. Такође, читаоци који се више заинтересују за програмирање, добиће многе прилике да дорађују дате програме и инспирацију за разне самостале пројекте.

О библиотеци PyGame
-------------------

Библиотека `PyGame <http://pygame.org>`__ се развија још од раних 2000. година. Сами аутори кажу да није у питању најбоља библиотека за програмирање игара (није ни друга, па ни трећа по
квалитету), али главна предност јој је то што је једноставнја о ддругих за коришћење и погодна је за учење програмирања кроз интересантан свет рачунарске графике и рачунарских игара.


Коришћење онлајн
----------------

Да бисмо вам олакшали прве кораке, у приручнику који управо читате спремили смо вам окружење у којем можете да пишете и тестирате једноставне PyGame програме. Спремили смо и прегршт примера и задатака у којима, као и у претходеним поглављима, треба углавном да довршите или поправите започете програме да би они потпуно прорадили. Да бисте ово окружење могли да користите, није потребно да инсталирате ништа додатно на свој рачунар.  Ипак, ако желите да с емало озбиљније позабавите програмирањем (на пример, желите да направите своју игрицу), препоручујемо да библиотеку инсталирате на свој рачунар и користите је из окружења за развој Python програма (на пример, IDLE), независно од прегледача веба и овог приручника. Програмирање у правом окружењу за развој је удобније и ефикасније, лакше је проналазити грешке у програму итд.

Инсталација
-----------

Да би на вашем рачунару било могуће покретати програме који су написани уз коришћење библиотеке PyGame, потребно ју је претходно инсталирати. Предуслов је, наравно, да на рачунару имате инсталиран Пајтон (пожељно је верзију 3.6 или новију). Ако то до сада нисте урадили, онда прво посетите сајт `<https://www.python.org>`__ и са њега преузмите најновију верзију језика Пајтон и окружења за рад са њим (оне се обично налазе у секцији Downloads, у подсекцији посвећеној оперативном систему који користите).

Када је на рачунар инсталиран Пајтон, можемо прећи на инсталацију библиотеке PyGame. То је заиста веома једноставно. Довољно је да у командној линији откуцате ``pip3 install pygame``. Командну линију покрећете најлакше тако што држећи тастер ``windows`` притиснете тастер ``r`` и онда откуцате ``cmd``. Уколико добијете поруку да команда ``pip3`` не постоји, онда пробајте са ``py -3 -m pip install pygame``. 

Када извршите инсталацију, најбоље је да одмах тестирате да је све протекло како треба тако што ћете:

* покренути Пајтон развојно окружење IDLE које је инсталирано као windows апкикација

* у развојном окружењу IDLE отворити нови пројекат (opcija File/New)

* у едитору који се појави откуцати програм који је приказан даље у тексту (можете одатле да га ископирате и само налепите у едитор окружења IDLE)

* снимити програм у фајл пре покретања (опција File/Save as...)

* покренути програм (опција Run/Run Module у менију, или тастер F5)


Након покретања програма треба да се појави прозор у којем је нацртан један квадрат и који стоји приказан три секунде.

.. activecode:: check_install_srp
   :nocodelens:
   :modaloutput: 
   :enablecopy:

   import pygame
   pygame.init()
   prozor = pygame.display.set_mode((200, 200))
   prozor.fill(pygame.Color("white"))
   pygame.draw.rect(prozor, pygame.Color("black"), (20, 20, 160, 160), 5)
   pygame.display.update()
   pygame.time.wait(3000)
   pygame.quit()

И остале примере из приручника можете да извршавате код себе на рачунару, што и препоручујемо да урадите бар понекад.

